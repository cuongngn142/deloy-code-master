<!-- Modal Auth -->
<div class="auth-Modal">
  <div class="modal-content">
    <!-- Tabs -->
    <div class="auth-tabs">
      <button class="tab-btn active" data-tab="login">Đăng nhập</button>
      <button class="tab-btn" data-tab="register">Đăng ký</button>
    </div>

    <!-- Login Form -->
    <div class="tab-content active" id="login">
      <h2>Đăng Nhập</h2>
      <form>
        <input type="email" name="email" placeholder="Email" required />
        <input type="password" name="matKhau" placeholder="Mật khẩu" required />
        <div class="remember-me">
          <input type="checkbox" id="rememberMe" />
          <label for="rememberMe">Ghi Nhớ Tôi</label>
        </div>
        <!-- Add loading spinner CSS -->
        <style>
        .loading-spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid #2196F3;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-left: 10px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .btn-with-spinner {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        </style>
        
        <!-- Modify login form button -->
        <form id="login">
            <button type="submit" class="btn btn-primary btn-with-spinner">
                <span>Đăng nhập</span>
                <div class="loading-spinner"></div>
            </button>
        </form>

        
        <script>
        // Xử lý đăng ký
document.getElementById('register').addEventListener('submit', async (e) => {
  e.preventDefault();
  
  try {
      const formData = new FormData(e.target);
      const data = {
          email: formData.get('email'),
          matKhau: formData.get('matKhau'),
          hoTen: formData.get('hoTen')
      };

      const response = await fetch('/auth/register', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
      });

      const result = await response.json();
      
      if (result.success) {
          alert('Đăng ký thành công!');
          window.location.reload();
      } else {
          alert(result.message);
      }
  } catch (error) {
      console.error('Lỗi:', error);
      alert('Có lỗi xảy ra, vui lòng thử lại sau');
  }
});

// Xử lý đăng nhập
document.getElementById('login').addEventListener('submit', async (e) => {
  e.preventDefault();
  
  try {
      const formData = new FormData(e.target);
      const data = {
          email: formData.get('email'),
          matKhau: formData.get('matKhau')
      };

      const response = await fetch('/auth/login', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
      });

      const result = await response.json();
      
      if (result.success) {
          window.location.reload();
      } else {
          alert(result.message);
      }
  } catch (error) {
      console.error('Lỗi:', error);
      alert('Có lỗi xảy ra, vui lòng thử lại sau');
  }
});
        </script>
        <div class="forgot-password">
          <a href="#!">Quên Mật Khẩu?</a>
        </div>
      </form>
    </div>

    <!-- Register Form -->
    <div class="tab-content" id="register">
      <h2>Đăng Ký</h2>
      <!-- Inside the Register Form -->
      <form>
        <input type="text" name="hoTen" placeholder="Họ tên" required />
        <input type="email" name="email" placeholder="Email" required />
        <input type="password" name="matKhau" placeholder="Mật khẩu" required />
        <input type="password" name="xacNhanMatKhau" placeholder="Xác nhận mật khẩu" required />
        <select name="VaiTro" required>
          <option value="User">User</option>
          <option value="Admin">Admin</option>
        </select>
        <div class="terms">
          <input type="checkbox" id="terms" required />
          <label for="terms">Tôi đồng ý với điều khoản</label>
        </div>
        <button type="submit" class="btn btn-primary">Đăng ký</button>
      </form>
    </div>
  </div>
</div>

<!-- Modal script -->
<script>
  const modal = document.querySelector(".auth-Modal");
  const openModalBtn = document.querySelector(".open-modal-btn");
  const closeBtn = document.querySelector(".close");
  const tabBtns = document.querySelectorAll(".tab-btn");
  const tabContents = document.querySelectorAll(".tab-content");

  // Các hàm helper
  function validateEmail(email) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
  }

  function showError(message) {
    alert(message);
  }

  // Mở modal
  openModalBtn.onclick = () => {
    modal.classList.add("show");
    showTab("login");
  };

  window.onclick = (e) => {
    if (e.target === modal) {
      modal.classList.remove("show");
    }
  };

  // Xử lý chuyển đổi giữa các tab
  function showTab(tabName) {
    tabBtns.forEach((btn) => {
      btn.classList.toggle("active", btn.dataset.tab === tabName);
    });

    tabContents.forEach((content) => {
      content.classList.toggle("active", content.id === tabName);
    });
  }

  // Xử lý khi click vào các tab
  tabBtns.forEach((btn) => {
    btn.onclick = () => showTab(btn.dataset.tab);
  });

  // Xử lý đăng nhập
  document.querySelector('#login form').addEventListener('submit', async (e) => {
    e.preventDefault();
    const email = e.target.querySelector('input[name="email"]').value;  // Sửa selector
    const matKhau = e.target.querySelector('input[name="matKhau"]').value;  // Sửa selector
  
    if (!validateEmail(email)) {
      showError('Email không hợp lệ');
      return;
    }
  
    try {
      const res = await fetch('/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ email, matKhau })
      });
  
      const data = await res.json();
      alert(data.message);
      if (data.success) {
        window.location.reload();
      }
    } catch (error) {
      showError('Có lỗi xảy ra, vui lòng thử lại sau');
    }
  });

  // Xử lý đăng ký
  document.querySelector('#register form').addEventListener('submit', async (e) => {
      e.preventDefault();
      const hoTen = e.target.querySelector('input[name="hoTen"]').value;
      const email = e.target.querySelector('input[name="email"]').value;
      const matKhau = e.target.querySelector('input[name="matKhau"]').value;
      const xacNhanMatKhau = e.target.querySelector('input[name="xacNhanMatKhau"]').value;
      const dieuKhoan = e.target.querySelector('#terms').checked;
      const vaiTro = e.target.querySelector('select[name="VaiTro"]').value;
  
      // Kiểm tra dữ liệu
      if (!validateEmail(email)) {
          showError('Email không hợp lệ');
          return;
      }
  
      if (matKhau !== xacNhanMatKhau) {
          showError('Mật khẩu xác nhận không khớp');
          return;
      }
  
      if (!dieuKhoan) {
          showError('Vui lòng đồng ý với điều khoản');
          return;
      }
  
      try {
          const res = await fetch('/auth/register', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json'
              },
              body: JSON.stringify({ hoTen, email, matKhau, vaiTro })
          });
  
          const data = await res.json();
          if (data.success) {
              alert('Đăng ký thành công!');
              showTab('login');
          } else {
              showError(data.message || 'Đăng ký thất bại');
          }
      } catch (error) {
          showError('Có lỗi xảy ra, vui lòng thử lại sau');
      }
  });
</script>
