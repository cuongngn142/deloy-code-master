<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/css/reset.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Poppins:ital,wght@0,400;0,500;0,600;0,700;1,400&family=Sen:wght@700&display=swap"
      rel="stylesheet"
    />
    <link rel="icon" href="./images/img/bg-logo-web.png" type="image/png" />
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/topic-detail.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
    />
    <title>Chi Tiết Chủ Đề | Code Master</title>
  </head>
  <body>
    <main class="topic-detail-main">
      <div class="main-content">
        <h1>Quản Lý Chủ Đề</h1>

        <div class="topic-list">
          <% if (typeof topics !== 'undefined' && topics.length > 0) { %> <%
          topics.forEach(function(topic) { %>
          <div class="topic-item">
            <div class="topic-info">
              <h3><%= topic.TenChuDe %></h3>
              <p><%= topic.MoTa %></p>
            </div>
            <div class="topic-actions">
              <button
                class="btn-edit"
                onclick="openEditModal('<%= topic.MaChuDe %>', '<%= topic.TenChuDe %>', '<%= topic.MoTa %>')"
              >
                <i class="fas fa-edit"></i> Sửa
              </button>
              <button
                class="btn-delete"
                onclick="deleteTopic('<%= topic.MaChuDe %>')"
              >
                <i class="fas fa-trash"></i> Xóa
              </button>
            </div>
          </div>
          <% }); %> <% } else { %>
          <p>Chưa có chủ đề nào.</p>
          <% } %>
        </div>
      </div>
    </main>

    <!-- Modal chỉnh sửa chủ đề -->
    <div id="editTopicModal" class="modal">
      <div class="modal-content">
        <h2>Chỉnh Sửa Chủ Đề</h2>
        <form id="editTopicForm">
          <input type="hidden" id="editTopicId" name="MaChuDe" />
          <div class="form-group">
            <label for="editTopicName">Tên chủ đề:</label>
            <input type="text" id="editTopicName" name="TenChuDe" required />
          </div>
          <div class="form-group">
            <label for="editTopicDesc">Mô tả:</label>
            <textarea id="editTopicDesc" name="MoTa" rows="3"></textarea>
          </div>
          <div class="form-actions">
            <button type="submit" class="btn-primary">Lưu</button>
            <button
              type="button"
              class="btn-secondary"
              onclick="closeEditModal()"
            >
              Hủy
            </button>
          </div>
        </form>
      </div>
    </div>
    <script>
      function openEditModal(id, name, desc) {
        document.getElementById("editTopicModal").style.display = "block";
        document.getElementById("editTopicId").value = id;
        document.getElementById("editTopicName").value = name;
        document.getElementById("editTopicDesc").value = desc;
      }

      function closeEditModal() {
        document.getElementById("editTopicModal").style.display = "none";
      }

      document
        .getElementById("editTopicForm")
        .addEventListener("submit", async function (e) {
          e.preventDefault();

          try {
            const formData = new FormData(this);
            const maChuDe = formData.get("MaChuDe");
            const tenChuDe = formData.get("TenChuDe").trim();
            const moTa = formData.get("MoTa").trim();

            if (!tenChuDe || !moTa) {
              throw new Error("Vui lòng điền đầy đủ thông tin chủ đề");
            }

            const data = {
              TenChuDe: tenChuDe,
              MoTa: moTa,
            };

            const response = await fetch(`/topic/edit/${maChuDe}`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(data),
            });

            const result = await response.json();

            if (result.success) {
              alert("Cập nhật chủ đề thành công");
              closeEditModal();
              location.reload();
            } else {
              // Nếu server trả về lỗi, hiển thị thông báo lỗi cụ thể
              throw new Error(result.message || "Không thể cập nhật chủ đề");
            }
          } catch (error) {
            console.error("Lỗi:", error);
            // Hiển thị thông báo lỗi từ server hoặc thông báo mặc định
            alert(error.message || "Có lỗi xảy ra khi cập nhật chủ đề");
          }
        });

      async function deleteTopic(topicId) {
        if (confirm("Bạn có chắc chắn muốn xóa chủ đề này?")) {
          try {
            const response = await fetch(`/topic/delete/${topicId}`, {
              method: "DELETE",
            });
            const result = await response.json();

            if (result.success) {
              alert(result.message); // Sử dụng thông báo từ server
              location.reload();
            } else {
              alert(result.message || "Có lỗi xảy ra khi xóa chủ đề");
            }
          } catch (error) {
            console.error("Lỗi:", error);
            alert("Có lỗi xảy ra khi xóa chủ đề");
          }
        }
      }
    </script>
  </body>
</html>
